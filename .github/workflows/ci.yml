name: ci
on:
  push:
    branch: 'dev'

jobs:
  build:
    runs-on: ubuntu-latest


    steps:
      - name: SetUp JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: 'adopt'


      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Make application-domain.yml #환경변수 주입
      - uses: actions/checkout@v2
      - run: touch ./Domain/src/main/resources/application-domain.yml
      - run: echo "${{ secrets.APPLICATION_DOMAIN }}" > ./Domain/src/main/resources/application-domain.yml


      - uses: actions/checkout@v2
      - run: touch ./Infrastructure/src/main/resources/application-infrastructure.yml
      - run: echo "${{ secrets.APPLICATION_INFRASTRUCTURE }}" > ./Infrastructure/src/main/resources/application-infrastructure.yml


      - uses: actions/checkout@v2
      - run: touch ./Core/src/main/resources/application-core.yml
      - run: echo "${{ secrets.APPLICATION_CORE }}" > ./Core/src/main/resources/application-core.yml


      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: sanbonai06/hmut-server


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build & push
        uses: docker/build-push-action@v2
        with:
          context: ./Api
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: mkdir -p ~/srv/ubuntu/hmut

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: ~/srv/ubuntu/
          remote_host: ${{ secrets.HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.KEY }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sh ~/srv/ubuntu/config/scripts/docker-init.sh
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml pull
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml up --build -d
            sudo docker system prune --all -f
